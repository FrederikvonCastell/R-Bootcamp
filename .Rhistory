d_steuer %>%
filter(Stadt %in% selected_cities) %>%
rep(.$ind, each = 4)
rep(filter(d_steuer, Stadt %in% selected_cities)$ind, each = 4)
rep(filter(d_steuer, Stadt %in% selected_cities)$ind, each = 4) %>% write.csv2("helper.csv")
d_muc <- read_csv2("selected_cities.csv")
d_muc <- read_csv2("selected_cities.csv")
ggplot(data = d_muc, aes(color = Stadt)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_ind)) +
ggtitle("Preis für 1- und 2-Familienhäuser indiziert 100 = 2004") +
labs(caption = "15 größte Kommunen in Deutschland")
ggplot(data = d_muc, aes(color = Stadt)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis für 1- und 2-Familienhäuser indiziert 100 = 2004") +
labs(caption = "15 größte Kommunen in Deutschland")
ggplot(data = d_muc) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis für 1- und 2-Familienhäuser indiziert 100 = 2004") +
labs(caption = "15 größte Kommunen in Deutschland")
ggplot(data = d_muc, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis für 1- und 2-Familienhäuser indiziert 100 = 2004") +
labs(caption = "15 größte Kommunen in Deutschland")
ggplot(data = d_muc, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis und Grundsteuer in München 100 = 2004")
unique(d_preis$Stadt)
unique(d_steuer$Stadt)
selected_cities <- c("Leipzig (KS)", "Leipzig, Kreisfreie Stadt", "Leipzig, Stadt")
d_preis %>%
filter(Stadt %in% selected_cities) %>%
write.csv2("selected_cities.csv")
d_preis %>%
filter(Stadt %in% selected_cities) %>%
View()
rep(filter(d_steuer, Stadt %in% selected_cities)$ind, each = 4) %>% write.csv2("helper.csv")
rep(filter(d_steuer, Stadt %in% selected_cities)$ind, each = 4)
filter(d_steuer, Stadt %in% selected_cities)$ind
filter(d_steuer, Stadt %in% selected_cities)
filter(d_steuer, Stadt %in% selected_cities)$ind %>% View()
filter(d_steuer, Stadt %in% selected_cities) %>% View()
selected_cities <- c("Leipzig (KS)", "Leipzig, Stadt")
d_preis %>%
filter(Stadt %in% selected_cities) %>%
write.csv2("selected_cities.csv")
rep(filter(d_steuer, Stadt %in% selected_cities)$ind, each = 4) %>% write.csv2("helper.csv")
d_lpz <- read_csv2("selected_cities.csv")
d_lpz <- read_csv2("selected_cities.csv")
ggplot(data = d_lpz, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis und Grundsteuer in München 100 = 2004")
ggplot(data = d_muc, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis und Grundsteuer in München 100 = 2004") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = d_lpz, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis und Grundsteuer in München 100 = 2004") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Scatter-Plot
ggplot(scatter_data, aes(Preise_4Q_2015, Einnahmen15/Einwohner15, label = Stadt)) +
geom_point() +
geom_text(vjust = -1, hjust = 0.5) +
ylab("Grundsteuer B-Einnahmen Q4/15 / Einwohner15") +
ggtitle("Grundsteuer vs. Immobilienpreise 2015")
ggplot(data = d_muc, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis und Grundsteuer in München 100 = 2004") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = d_lpz, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_index)) +
ggtitle("Preis und Grundsteuer in Leipzig 100 = 2004") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
options(scipen = 999)
d <- read_csv2("/Users/witzenbergb/Downloads/grundsteuer_kreise95_selected.csv")
d_preis_index <- read_xlsx("/Users/witzenbergb/Downloads/Preisdaten.xlsx", 2, skip = 20, n_max = 16)
d_preis_median <- read_xlsx("/Users/witzenbergb/Downloads/Preisdaten.xlsx", 2, skip = 101, n_max = 16)
d_hebesatz <- read_csv2("/Users/witzenbergb/Downloads/hebesatz.csv")
d_einwohner <- read_csv2("/Users/witzenbergb/Downloads/einwohner15.csv")
View(d_hebesatz)
scatter_data <- data.frame(stringsAsFactors = FALSE,
Stadt = c("Hamburg (KS)", "Bremen (KS)",
"Düsseldorf (KS)", "Duisburg (KS)",
"Essen (KS)", "Köln (KS)", "Dortmund (KS)",
"Frankfurt a.M. (KS)", "Stuttgart (KS)",
"München (KS)", "Nürnberg (KS)", "Berlin (KS)",
"Dresden (KS)", "Leipzig (KS)"),
Preise_4Q_2015 = c(3294.51, 1753.85, 3714.29, 1727.16, 2169.63,
2875, 2088.76, 3794.64, 3992.155, 5967.84,
2958.33, 2733.125, 2361.43, 1947.15),
Einnahmen15 = c(444559L,136968L, 140558L, 130222L, 132008L,
220547L, 117497L, 203906L, 151714L,
313973L, 113041L, 780720L, 75953L, 93966L),
Hebesatz15 = c(540L, 580L, 440L, 855L, 670L, 515L, 610L, 500L,
520L, 535L, 535L, 810L, 635L, 650L),
Einwohner15 = c(1787408L, 557464L, 612178L, 491231L, 582624L,
1060582L, 586181L, 732688L, 623738L,
1450381L, 509975L, 3520031L, 543825L, 560472L)
)
scatter_data$Einnahmen15 <- scatter_data$Einnahmen15 * 1000 # aus Tsd. Euro nur Euro machen
# Scatter-Plot
ggplot(scatter_data, aes(Preise_4Q_2015, Einnahmen15/Einwohner15, label = Stadt)) +
geom_point() +
geom_text(vjust = -1, hjust = 0.5) +
ylab("Grundsteuer B-Einnahmen Q4/15 / Einwohner15") +
ggtitle("Grundsteuer vs. Immobilienpreise 2015")
# Liniendiagramme
library(zoo) # für das Management der Quartale
# Quartale richtig formatieren
replace_quarters <- function(x) {
quarters <- stringr::str_extract(x, "^.*(?=(\\.Q'))") # Quartalszahl extrahieren
quarters <- quarters[2:length(quarters)]
years <- stringr::str_extract(x, "(?<=Q').*") # Jahreszahl extrahieren
years <- paste0("20", years)
years <- years[2:length(years)]
q_years <- paste(years, quarters) # Quartale und Jahre zusammenfügen
q_years <- as.yearqtr(format(q_years), "%Y%q") # als Yearqtr umwandeln
q_years
}
d_preis_index %>%
tidyr::gather(key = "Quartal", value = "Preis", "1.Q'04":"1.Q'18") -> d_preis
View(d_preis)
length(replace_quarters(d_preis$Quartal))
# Liniendigramm ausgewählte Städte
selected_cities <- c("München, Landeshauptstadt", "München (KS)")
d_preis$Quartal <- as.yearqtr(d_preis$Quartal)
d_preis_index %>%
tidyr::gather(key = "Quartal", value = "Preis", "1.Q'04":"1.Q'18") -> d_preis
replace_quarters(d_preis$Quartal) %>% write.csv2("helper.csv")
d_preis$Quartal <- replace_quarters(d_preis$Quartal)
d_preis$Quartal[2:length(d_preis$Quartal)] <- replace_quarters(d_preis$Quartal)
View(d_preis)
replace_quarters(d_preis$Quartal)
d_preis_index %>%
tidyr::gather(key = "Quartal", value = "Preis", "1.Q'04":"1.Q'18") -> d_preis
replace_quarters(d_preis$Quartal)
d_preis$Quartal[1]
d_preis$Quartal[1] <- "2004 Q1"
d_preis$Quartal[2:length(d_preis$Quartal)] <- replace_quarters(d_preis$Quartal)
as.yearqtr(d_preis$Quartal)
d_preis$Quartal[1] <- "2004"
as.yearqtr(d_preis$Quartal)
d_preis_index %>%
tidyr::gather(key = "Quartal", value = "Preis", "1.Q'04":"1.Q'18") -> d_preis
replace_quarters(d_preis$Quartal)
replace_quarters(d_preis$Quartal) %>% write.csv2("helper.csv")
# Liniendigramm ausgewählte Städte
selected_cities <- c("München, Landeshauptstadt", "München (KS)")
d_preis %>%
filter(Stadt %in% selected_cities) %>%
View()
d_preis_index %>%
tidyr::gather(key = "Quartal", value = "Preis", "1.Q'04":"1.Q'18") -> d_preis
d_preis %>%
filter(Stadt %in% selected_cities) %>%
View()
as.yearqtr(d_preis$Quartal)
as.yearqtr(format(d_preis$Quartal), "%Y%q")
as.yearqtr(format(d_preis$Quartal), "%Y %q")
class(d_preis$Quartal)
d_preis %>%
filter(X__1 %in% selected_cities) %>%
write.csv2("selected_cities.csv")
d_preis %>%
filter(X__1 %in% selected_cities) %>%
View()
rep(filter(d_steuer, Stadt %in% selected_cities)$ind, each = 4) %>% write.csv2("helper.csv")
d %>%
group_by(Stadt) %>%
arrange(Jahr) %>%
filter(Jahr >= 2004) %>%
mutate(ind = `Grundsteuer B - Istaufkommen`/first(`Grundsteuer B - Istaufkommen`) * 100) -> d_steuer
rep(filter(d_steuer, Stadt %in% selected_cities)$ind, each = 4) %>% write.csv2("helper.csv")
View(d)
View(d_steuer)
View(d_steuer)
d_steuer %>%
filter(Stadt %in% selected_cities) %>% View()
?ifelse
names(d_steuer)
d_steuer %>%
filter(Stadt %in% selected_cities) %>%
ifelse(Jahr >= 2010, mutate(Steuer_Hebesatz = `Grundsteuer B - Istaufkommen` / 535),
ifelse(Jahr <= 2004, Steuer_Hebesatz = `Grundsteuer B - Istaufkommen` / 400,
ifelse(Jahr < 2004 & Jahr < 2010, Steuer_Hebesatz = `Grundsteuer B - Istaufkommen` / 490)))
d_steuer %>%
filter(Stadt %in% selected_cities) %>%
mutate(Steuer_Hebesatz = `Grundsteuer B - Istaufkommen`/case_when(
Jahr <= 2004 ~ 400,
Jahr > 2004 & Jahr < 2010 ~ 490,
Jahr >= 2010 ~ 535
))
d_steuer %>%
filter(Stadt %in% selected_cities) %>%
mutate(Steuer_Hebesatz = `Grundsteuer B - Istaufkommen`/case_when(
Jahr <= 2004 ~ 400,
Jahr > 2004 & Jahr < 2010 ~ 490,
Jahr >= 2010 ~ 535
)) %>%
View()
d_steuer %>%
filter(Stadt %in% selected_cities) %>%
mutate(Steuer_Hebesatz = `Grundsteuer B - Istaufkommen`/case_when(
Jahr <= 2004 ~ 400,
Jahr > 2004 & Jahr < 2010 ~ 490,
Jahr >= 2010 ~ 535
)) %>%
mutate(Steuer_Hebesatz_index = Steuer_Hebesatz / first(Steuer_Hebesatz)) %>%
View()
d_steuer %>%
filter(Stadt %in% selected_cities) %>%
mutate(Steuer_Hebesatz = `Grundsteuer B - Istaufkommen`/case_when(
Jahr <= 2004 ~ 400,
Jahr > 2004 & Jahr < 2010 ~ 490,
Jahr >= 2010 ~ 535
)) %>%
mutate(Steuer_Hebesatz_index = Steuer_Hebesatz / first(Steuer_Hebesatz) * 100) %>%
View()
d_steuer %>%
filter(Stadt %in% selected_cities) %>%
mutate(Steuer_Hebesatz = `Grundsteuer B - Istaufkommen`/case_when(
Jahr <= 2004 ~ 400,
Jahr > 2004 & Jahr < 2010 ~ 490,
Jahr >= 2010 ~ 535
)) %>%
mutate(Steuer_Hebesatz_index = Steuer_Hebesatz / first(Steuer_Hebesatz) * 100) -> d_steuer
rep(filter(d_steuer, Stadt %in% selected_cities)$ind, each = 4) %>% write.csv2("helper.csv")
rep(filter(d_steuer, Stadt %in% selected_cities)$Steuer_Hebesatz_index, each = 4) %>% write.csv2("helper.csv")
d_muc <- read_csv2("selected_cities.csv")
ggplot(data = d_muc, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_Hebesatz_Index)) +
ggtitle("Preis und Grundsteuer in München 100 = 2004") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
d_preis$Quartal <- as.yearqtr(d_preis$Quartal)
d_preis_index <- read_xlsx("/Users/witzenbergb/Downloads/Preisdaten.xlsx", 2, skip = 20, n_max = 16)
d_preis_index %>%
tidyr::gather(key = "Quartal", value = "Preis", "1.Q'04":"1.Q'18") -> d_preis
# Quartale richtig formatieren
replace_quarters <- function(x) {
quarters <- stringr::str_extract(x, "^.*(?=(\\.Q'))") # Quartalszahl extrahieren
quarters <- quarters[2:length(quarters)]
years <- stringr::str_extract(x, "(?<=Q').*") # Jahreszahl extrahieren
years <- paste0("20", years)
years <- years[2:length(years)]
q_years <- paste(years, quarters) # Quartale und Jahre zusammenfügen
}
replace_quarters(d_preis$Quartal)
# Quartale richtig formatieren
replace_quarters <- function(x) {
quarters <- stringr::str_extract(x, "^.*(?=(\\.Q'))") # Quartalszahl extrahieren
quarters <- quarters[2:length(quarters)]
years <- stringr::str_extract(x, "(?<=Q').*") # Jahreszahl extrahieren
years <- paste0("20", years)
years <- years[2:length(years)]
q_years <- paste(years, quarters) # Quartale und Jahre zusammenfügen
q_years
}
replace_quarters(d_preis$Quartal)
d_preis$Quartal
d_preis$Quartal <- replace_quarters(d_preis$Quartal)
# Quartale richtig formatieren
replace_quarters <- function(x) {
quarters <- stringr::str_extract(x, "^.*(?=(\\.Q'))") # Quartalszahl extrahieren
quarters <- quarters[1:length(quarters)]
years <- stringr::str_extract(x, "(?<=Q').*") # Jahreszahl extrahieren
years <- paste0("20", years)
years <- years[1:length(years)]
q_years <- paste(years, quarters) # Quartale und Jahre zusammenfügen
q_years
}
d_preis$Quartal <- replace_quarters(d_preis$Quartal)
as.yearqtr(d_preis$Quartal)
# Liniendiagramme
library(zoo) # für das Management der Quartale
format.yearqtr(d_preis$Quartal)
d_preis$Quartal
class(d_preis$Quartal)
# Quartale richtig formatieren
replace_quarters <- function(x) {
quarters <- stringr::str_extract(x, "^.*(?=(\\.Q'))") # Quartalszahl extrahieren
quarters <- quarters[1:length(quarters)]
years <- stringr::str_extract(x, "(?<=Q').*") # Jahreszahl extrahieren
years <- paste0("20", years)
years <- years[1:length(years)]
q_years <- paste(years, "-", quarters) # Quartale und Jahre zusammenfügen
q_years
}
d_preis_index %>%
tidyr::gather(key = "Quartal", value = "Preis", "1.Q'04":"1.Q'18") -> d_preis
d_preis$Quartal <- replace_quarters(d_preis$Quartal)
format.yearqtr(d_preis$Quartal)
as.yearqtr(d_preis$Quartal)
# Quartale richtig formatieren
replace_quarters <- function(x) {
quarters <- stringr::str_extract(x, "^.*(?=(\\.Q'))") # Quartalszahl extrahieren
quarters <- quarters[1:length(quarters)]
years <- stringr::str_extract(x, "(?<=Q').*") # Jahreszahl extrahieren
years <- paste0("20", years)
years <- years[1:length(years)]
q_years <- paste0(years, "-", quarters) # Quartale und Jahre zusammenfügen
q_years
}
d_preis$Quartal <- replace_quarters(d_preis$Quartal)
format.yearqtr(d_preis$Quartal)
as.yearqtr(d_preis$Quartal)
as.yearqtr.character(d_preis$Quartal)
Sys.yearqtr()
as.yearqtr("2018-2")
as.yearqtr("2004-2")
d_preis$Quartal
# Quartale richtig formatieren
replace_quarters <- function(x) {
quarters <- stringr::str_extract(x, "^.*(?=(\\.Q'))") # Quartalszahl extrahieren
quarters <- quarters[1:length(quarters)]
years <- stringr::str_extract(x, "(?<=Q').*") # Jahreszahl extrahieren
years <- paste0("20", years)
years <- years[1:length(years)]
q_years <- paste0(years, "-", quarters) # Quartale und Jahre zusammenfügen
q_years
}
d_preis_index %>%
tidyr::gather(key = "Quartal", value = "Preis", "1.Q'04":"1.Q'18") -> d_preis
d_preis$Quartal <- replace_quarters(d_preis$Quartal)
as.yearqtr(d_preis$Quartal)
d_preis$Quartal <- as.yearqtr(d_preis$Quartal)
d_preis %>%
filter(X__1 %in% selected_cities) %>%
write.csv2("selected_cities.csv")
d_preis %>%
filter(X__1 %in% selected_cities) %>%
View()
rep(filter(d_steuer, Stadt %in% selected_cities)$Steuer_Hebesatz_index, each = 4) %>% write.csv2("helper.csv")
d_muc <- read_csv2("selected_cities.csv")
View(d_muc)
d_muc <- read_csv2("selected_cities.csv")
ggplot(data = d_muc, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_Hebesatz_Index)) +
ggtitle("Preis und Grundsteuer in München 100 = 2004") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = d_muc, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_Hebesatz_Index)) +
ggtitle("Immobilienpreis und Grundsteuer-Entwicklung in München") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(ylab = "Index, 2004 = 100")
?labs
ggplot(data = d_muc, aes(group = 1)) +
geom_line(aes(Quartal, Preis)) +
geom_line(aes(Quartal, Steuer_Hebesatz_Index)) +
ggtitle("Immobilienpreis und Grundsteuer-Entwicklung in München") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(y = "Index, 2004 = 100")
# Scatter-Plot
ggplot(scatter_data, aes(Preise_4Q_2015, Einnahmen15/Einwohner15, label = Stadt)) +
geom_point() +
geom_text(vjust = -1, hjust = 0.5) +
ylab("Grundsteuer B-Einnahmen Q4/15 / Einwohner15") +
ggtitle("Grundsteuer vs. Immobilienpreise 2015")
# Scatter-Plot
ggplot(scatter_data, aes(Preise_4Q_2015, Einnahmen15/Einwohner15, label = Stadt)) +
geom_point() +
geom_text(vjust = -1, hjust = 0.5) +
ylab("Grundsteuer B-Einnahmen Q4/15 / Einwohner 2015") +
ggtitle("Grundsteuer vs. Immobilienpreise 2015") +
labs(caption = "Top 14 größte deutsche Städte / Hannover ausgelassen, weil nur als Region verfügbar")
hebesaetze <- read_xlsx("/Users/witzenbergb/Downloads/Hebesätze 2016.xlsx")
hebesaetze <- read_xls("/Users/witzenbergb/Downloads/Hebesätze 2016.xls")
View(hebesaetze)
scatter_data <- data.frame(stringsAsFactors = FALSE,
Stadt = c("Hamburg (KS)", "Bremen (KS)",
"Düsseldorf (KS)", "Duisburg (KS)",
"Essen (KS)", "Köln (KS)", "Dortmund (KS)",
"Frankfurt a.M. (KS)", "Stuttgart (KS)",
"München (KS)", "Nürnberg (KS)", "Berlin (KS)",
"Dresden (KS)", "Leipzig (KS)"),
Preise_4Q_2015 = c(3294.51, 1753.85, 3714.29, 1727.16, 2169.63,
2875, 2088.76, 3794.64, 3992.155, 5967.84,
2958.33, 2733.125, 2361.43, 1947.15),
Einnahmen15 = c(444559L,136968L, 140558L, 130222L, 132008L,
220547L, 117497L, 203906L, 151714L,
313973L, 113041L, 780720L, 75953L, 93966L),
Hebesatz15 = c(540L, 580L, 440L, 855L, 670L, 515L, 610L, 500L,
520L, 535L, 535L, 810L, 635L, 650L),
Einwohner15 = c(1787408L, 557464L, 612178L, 491231L, 582624L,
1060582L, 586181L, 732688L, 623738L,
1450381L, 509975L, 3520031L, 543825L, 560472L)
)
View(scatter_data)
scatter_data$Einnahmen15 <- scatter_data$Einnahmen15 * 1000 # aus Tsd. Euro nur Euro machen
View(scatter_data)
scatter_data %>%
mutate(ein_pro_kopf = Einnahmen15/Einwohner15) %>%
write.csv2("/Users/witzenbergb/Downloads/output_scatter_Endt.csv") # Output für Datawrapper
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
options(scipen = 999)
scatter_data %>%
mutate(ein_pro_kopf = Einnahmen15/Einwohner15) %>%
write.csv2("/Users/witzenbergb/Downloads/output_scatter_Endt.csv") # Output für Datawrapper
getwd()
library(archieSZ)
library(archieSZ)
config_archie()
config_archie()
#load data
# sheet: 1jaWXCf0PyPNqyD3DjtInn_4UsgZxOp3UR1VGXqVf-1g
google_doc_id <- "10nG4--UbXbx6d3s62ldVmH3SALn4NvXGUwDurp36WMI"
#config_archie()
data_archie <- get_doc_content(google_doc_id, "text/html")
archie_list <- parse_doc_to_archie(data_archie)
save(archie_list, file="data/archie_list.RData")
config_archie()
library(archieSZ)
#load data
# sheet: 1jaWXCf0PyPNqyD3DjtInn_4UsgZxOp3UR1VGXqVf-1g
google_doc_id <- "10nG4--UbXbx6d3s62ldVmH3SALn4NvXGUwDurp36WMI"
config_archie()
data_archie <- get_doc_content(google_doc_id, "text/html")
data_archie <- get_doc_content(google_doc_id, "text/html")
archie_list <- parse_doc_to_archie(data_archie)
save(archie_list, file="data/archie_list.RData")
# This script scrapes all champions league results since 1955 to check for home and away goals
library(tidyverse)
library(rvest)
url <- "https://de.uefa.com/uefachampionsleague/history/season=1955/matches/#/all"
test_html <- read_html(url)
# season
url %>%
html_node(".h2h-season")
# season
url %>%
html_nodes(".h2h-season")
# season
test_html %>%
html_node(".h2h-season")
# season
test_html %>%
html_nodes(".h2h-season")
View(test_html)
# season
test_html %>%
content()
# season
test_html %>%
content
library(RSelenium)
link <- url
rD <- rsDriver()
remDr$navigate(link)
remDr <- rD[["client"]]
remDr$navigate(link)
html_current <- read_html(remDr$getPageSource()[[1]])
sink("test.html")
html_current
sink()
View(html_current)
write.table(html_current,
file='test.html',
quote = FALSE,
col.names = FALSE,
row.names = FALSE)
XML::saveXML(html_current, "test.html")
write_xml(html_current, "test.html")
accounts <- c("johannes.grunert", "moenchtim", "platznehmen", "hopedresden",
"_C_Nazifrei", "robertandreasch", "aida_archiv", "luna_le", "antifa_Dresden",
"Exif_Recherche", "tmschlz", "gnwp161", "BBarret161", "LinkeChemnitz", "naziwatchemnitz",
"derrechterand","RASSISMUSTOETET", "Kraftclub", "FeineSahneFischfilet", "Sea_Watch",
"ab_brandenburg", "RAASachsen", "KeinBockaufNazi", "CASPERxOFFICIAL")
library(rtweet)
twitter_token <- create_token(app = "szer_research_twitter",
consumer_key = "Qxy6hHFrNYLujvf4kB6cCxelI",
consumer_secret = "DnbIuujVPuiwqop7jWn3UnIzAXvy5MDyY54GaVjYzSHNPPngDd",
access_token = "1031562440813813760-CpdH5IVHZCztjjoKfautCNZ5RbKeOw",
access_secret = "p9ajvSpumCgJhodmSYVlJJ6iPsrSZmR02Jw6Sy1em56cg")
accounts_links <- c("johannes.grunert", "moenchtim", "platznehmen", "hopedresden",
"_C_Nazifrei", "robertandreasch", "aida_archiv", "luna_le", "antifa_Dresden",
"Exif_Recherche", "tmschlz", "gnwp161", "BBarret161", "LinkeChemnitz", "naziwatchemnitz",
"derrechterand","RASSISMUSTOETET", "Kraftclub", "FeineSahneFischfilet", "Sea_Watch",
"ab_brandenburg", "RAASachsen", "KeinBockaufNazi", "CASPERxOFFICIAL")
## get packages installed
packs = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
## and now re-install install packages using install.packages()
install.packages(packs$Package)
## get packages installed
packs = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
saveRDS(packs, "22-03-2019-packages.RData")
getwd()
installed.packages()
install.packages(c("ape", "assertthat", "audio", "callr", "caTools", "cli", "colorspace", "dimRed", "e1071", "earth", "formatR", "fs", "future", "git2r", "glue", "gower", "highr", "httpuv", "kableExtra", "knitr", "lazyeval", "lme4", "Matrix", "mgcv", "network", "openssl", "pacman", "pdftools", "pkgbuild", "plotmo", "pROC", "processx", "purrr", "quanteda", "Rcpp", "RcppArmadillo", "RCurl", "readxl", "recipes", "reticulate", "rgdal", "rlang", "rmarkdown", "robustbase", "rosm", "rstudioapi", "rticles", "slam", "spotifyr", "stringi", "sys", "tibble", "tidyr", "tinytex", "V8", "XML", "zip", "zoo"))
version
packageStatus()
install.packages(c("audio", "dimRed", "e1071", "earth", "fs", "git2r", "mgcv", "rlang", "robustbase", "zoo"))
version
setwd("~/Documents/R-Projekte/R-Bootcamp")
